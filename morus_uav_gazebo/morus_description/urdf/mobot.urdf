<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from morus.gazebo.xacro             | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="morus" xmlns:xacro="http://ros.org/wiki/xacro">
  <!--
  It seems that the xacro:property does not allow to use substitution args. Therefore, instead xacro parameter ${namespace}, subsitution argument is used $(arg name). This is 
  <xacro:property name="namespace" value="$(arg name)" />
  -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/morus</robotNamespace>
      <robotParam>/morus/robot_description </robotParam>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  <!-- [kg] -->
  <!-- [m] -->
  <!-- [s] -->
  <!-- [s] -->
  <!-- [rad/s] -->
  <!-- inertia of a movable mass, assuming it is a cube. The formula is I=ms^2/6 where "s" is length of one side
   of the cube and "m" is its mass-->
  <link name="base_link"/>
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="base_link_inertia"/>
  </joint>
  <link name="base_link_inertia">
    <inertial>
      <mass value="30"/>
      <!-- [kg] -->
      <origin xyz="0 0 0"/>
      <inertia ixx="5.5268" ixy="0.0" ixz="0.0" iyy="5.5268" iyz="0.0" izz="6.8854"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.125"/>
      <geometry>
        <mesh filename="package://morus_description/meshes/MORUS_UAV_without_mass.dae" scale="1 1 1"/>
        <!--box size="${body_width} ${body_width} ${body_height}"/-->
        <!-- [m] [m] [m] -->
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.3 0.3 0.25"/>
        <!-- [m] [m] [m] -->
      </geometry>
    </collision>
  </link>
  <!-- IMU -->
  <link name="imu_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.01"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="imu_joint" type="revolute">
    <!--origin xyz="0 0 0" rpy="3.1416 0 0" / -->
    <parent link="base_link"/>
    <child link="imu_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <!-- attach multirotor_base_plugin to the base_link -->
  <gazebo>
    <plugin filename="librotors_gazebo_multirotor_base_plugin.so" name="rosbag">
      <robotNamespace>morus</robotNamespace>
      <linkName>base_link</linkName>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <joint name="rotor_0_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0.615 0 0.325"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_0"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz> 
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_0">
    <inertial>
      <mass value="0.2"/>
      <!-- [kg] -->
      <inertia ixx="3.9e-05" ixy="0.0" ixz="0.0" iyy="0.0726015" iyz="0.0" izz="0.0726375"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://morus_description/meshes/propeller_cw.dae" scale="0.0025 0.0025 0.0025"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.33"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="front_motor_model">
      <jointName>rotor_0_joint</jointName>
      <linkName>rotor_0</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstant>0.125</timeConstant>
      <timeConstantUp>0.25</timeConstantUp>
      <timeConstantDown>0.25</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>0.000456874</motorConstant>
      <momentConstant>0.01</momentConstant>
      <commandTopic>morus/command/motors</commandTopic>
      <motorNumber>0</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-05</rollingMomentCoefficient>
      <motorVelocityTopic>morus/motor_vel/0</motorVelocityTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="rotor_0">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="rotor_1_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 0.615 0.325"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_1"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz> 
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_1">
    <inertial>
      <mass value="0.2"/>
      <!-- [kg] -->
      <inertia ixx="3.9e-05" ixy="0.0" ixz="0.0" iyy="0.0726015" iyz="0.0" izz="0.0726375"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://morus_description/meshes/propeller_ccw.dae" scale="0.0025 0.0025 0.0025"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.33"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="left_motor_model">
      <jointName>rotor_1_joint</jointName>
      <linkName>rotor_1</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstant>0.125</timeConstant>
      <timeConstantUp>0.25</timeConstantUp>
      <timeConstantDown>0.25</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>0.000456874</motorConstant>
      <momentConstant>0.01</momentConstant>
      <commandTopic>morus/command/motors</commandTopic>
      <motorNumber>1</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-05</rollingMomentCoefficient>
      <motorVelocityTopic>morus/motor_vel/1</motorVelocityTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="rotor_1">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="rotor_2_joint" type="continuous">
    <origin rpy="0 0 0" xyz="-0.615 0 0.325"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_2"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz> 
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_2">
    <inertial>
      <mass value="0.2"/>
      <!-- [kg] -->
      <inertia ixx="3.9e-05" ixy="0.0" ixz="0.0" iyy="0.0726015" iyz="0.0" izz="0.0726375"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://morus_description/meshes/propeller_cw.dae" scale="0.0025 0.0025 0.0025"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.33"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="back_motor_model">
      <jointName>rotor_2_joint</jointName>
      <linkName>rotor_2</linkName>
      <turningDirection>cw</turningDirection>
      <timeConstant>0.125</timeConstant>
      <timeConstantUp>0.25</timeConstantUp>
      <timeConstantDown>0.25</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>0.000456874</motorConstant>
      <momentConstant>0.01</momentConstant>
      <commandTopic>morus/command/motors</commandTopic>
      <motorNumber>2</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-05</rollingMomentCoefficient>
      <motorVelocityTopic>morus/motor_vel/2</motorVelocityTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="rotor_2">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="rotor_3_joint" type="continuous">
    <origin rpy="0 0 0" xyz="0 -0.615 0.325"/>
    <axis xyz="0 0 1"/>
    <!-- TODO(ff): not currently set because it's not yet supported -->
    <!-- <limit effort="2000" velocity="${max_rot_velocity}" /> -->
    <parent link="base_link"/>
    <child link="rotor_3"/>
  </joint>
  <!-- TODO(ff): not currently set because it's not yet supported -->
  <!-- <gazebo reference="rotor_${motor_number}_joint"> <axis> <xyz>0 0 1</xyz> 
      <limit> <velocity> ${max_rot_velocity} </velocity> </limit> </axis> </gazebo> -->
  <link name="rotor_3">
    <inertial>
      <mass value="0.2"/>
      <!-- [kg] -->
      <inertia ixx="3.9e-05" ixy="0.0" ixz="0.0" iyy="0.0726015" iyz="0.0" izz="0.0726375"/>
    </inertial>
    <visual>
      <geometry>
        <!-- <cylinder length="0.005" radius="${radius_rotor}"/> -->
        <!-- [m] -->
        <mesh filename="package://morus_description/meshes/propeller_ccw.dae" scale="0.0025 0.0025 0.0025"/>
        <!-- <box size="${2*radius_rotor} 0.01 0.005"/> -->
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.005" radius="0.33"/>
        <!-- [m] -->
      </geometry>
    </collision>
  </link>
  <gazebo>
    <plugin filename="librotors_gazebo_motor_model.so" name="right_motor_model">
      <jointName>rotor_3_joint</jointName>
      <linkName>rotor_3</linkName>
      <turningDirection>ccw</turningDirection>
      <timeConstant>0.125</timeConstant>
      <timeConstantUp>0.25</timeConstantUp>
      <timeConstantDown>0.25</timeConstantDown>
      <maxRotVelocity>838</maxRotVelocity>
      <motorConstant>0.000456874</motorConstant>
      <momentConstant>0.01</momentConstant>
      <commandTopic>morus/command/motors</commandTopic>
      <motorNumber>3</motorNumber>
      <rotorDragCoefficient>0.000806428</rotorDragCoefficient>
      <rollingMomentCoefficient>1e-05</rollingMomentCoefficient>
      <motorVelocityTopic>morus/motor_vel/3</motorVelocityTopic>
      <rotorVelocitySlowdownSim>10</rotorVelocitySlowdownSim>
    </plugin>
  </gazebo>
  <gazebo reference="rotor_3">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="stick_to_movable_mass_0" type="prismatic">
    <origin rpy="0 0 0" xyz="0.3575 0.0 0.05"/>
    <axis xyz="1 0 0"/>
    <parent link="base_link"/>
    <child link="movable_mass_0"/>
    <limit effort="10000" lower="-0.3" upper="0.3" velocity="20"/>
    <dynamics damping="10"/>
    <!--friction="0.1" used only in Gazebo >= 5.0, damping is the viscous friction damping,
       i.e. Ft = damping * v -->
  </joint>
  <link name="movable_mass_0">
    <visual>
      <!--origin rpy="0 0 ${orientation}" xyz="0 0 ${0*movable_mass_dimension/2}"/-->
      <origin rpy="0 0 3.14" xyz="0 0 0"/>
      <geometry>
        <!--mesh filename="package://morus_description/meshes/${mesh_file_mass}"
            scale="1 1 1" /-->
        <box size="0.08 0.08 0.08"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <geometry>
        <box size="0.08 0.08 0.08"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <mass value="1"/>
      <inertia ixx="0.00106666666667" ixy="0.0" ixz="0.0" iyy="0.00106666666667" iyz="0.0" izz="0.00106666666667"/>
    </inertial>
  </link>
  <gazebo reference="movable_mass_0">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="stick_to_movable_mass_1" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 0.3575 0.05"/>
    <axis xyz="0 1 0"/>
    <parent link="base_link"/>
    <child link="movable_mass_1"/>
    <limit effort="10000" lower="-0.3" upper="0.3" velocity="20"/>
    <dynamics damping="10"/>
    <!--friction="0.1" used only in Gazebo >= 5.0, damping is the viscous friction damping,
       i.e. Ft = damping * v -->
  </joint>
  <link name="movable_mass_1">
    <visual>
      <!--origin rpy="0 0 ${orientation}" xyz="0 0 ${0*movable_mass_dimension/2}"/-->
      <origin rpy="0 0 1.57" xyz="0 0 0"/>
      <geometry>
        <!--mesh filename="package://morus_description/meshes/${mesh_file_mass}"
            scale="1 1 1" /-->
        <box size="0.08 0.08 0.08"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <geometry>
        <box size="0.08 0.08 0.08"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <mass value="1"/>
      <inertia ixx="0.00106666666667" ixy="0.0" ixz="0.0" iyy="0.00106666666667" iyz="0.0" izz="0.00106666666667"/>
    </inertial>
  </link>
  <gazebo reference="movable_mass_1">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="stick_to_movable_mass_2" type="prismatic">
    <origin rpy="0 0 0" xyz="-0.3575 0.0 0.05"/>
    <axis xyz="-1 0 0"/>
    <parent link="base_link"/>
    <child link="movable_mass_2"/>
    <limit effort="10000" lower="-0.3" upper="0.3" velocity="20"/>
    <dynamics damping="10"/>
    <!--friction="0.1" used only in Gazebo >= 5.0, damping is the viscous friction damping,
       i.e. Ft = damping * v -->
  </joint>
  <link name="movable_mass_2">
    <visual>
      <!--origin rpy="0 0 ${orientation}" xyz="0 0 ${0*movable_mass_dimension/2}"/-->
      <origin rpy="0 0 3.14" xyz="0 0 0"/>
      <geometry>
        <!--mesh filename="package://morus_description/meshes/${mesh_file_mass}"
            scale="1 1 1" /-->
        <box size="0.08 0.08 0.08"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <geometry>
        <box size="0.08 0.08 0.08"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <mass value="1"/>
      <inertia ixx="0.00106666666667" ixy="0.0" ixz="0.0" iyy="0.00106666666667" iyz="0.0" izz="0.00106666666667"/>
    </inertial>
  </link>
  <gazebo reference="movable_mass_2">
    <material>Gazebo/Blue</material>
  </gazebo>
  <joint name="stick_to_movable_mass_3" type="prismatic">
    <origin rpy="0 0 0" xyz="0.0 -0.3575 0.05"/>
    <axis xyz="0 -1 0"/>
    <parent link="base_link"/>
    <child link="movable_mass_3"/>
    <limit effort="10000" lower="-0.3" upper="0.3" velocity="20"/>
    <dynamics damping="10"/>
    <!--friction="0.1" used only in Gazebo >= 5.0, damping is the viscous friction damping,
       i.e. Ft = damping * v -->
  </joint>
  <link name="movable_mass_3">
    <visual>
      <!--origin rpy="0 0 ${orientation}" xyz="0 0 ${0*movable_mass_dimension/2}"/-->
      <origin rpy="0 0 1.57" xyz="0 0 0"/>
      <geometry>
        <!--mesh filename="package://morus_description/meshes/${mesh_file_mass}"
            scale="1 1 1" /-->
        <box size="0.08 0.08 0.08"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <geometry>
        <box size="0.08 0.08 0.08"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.0"/>
      <mass value="1"/>
      <inertia ixx="0.00106666666667" ixy="0.0" ixz="0.0" iyy="0.00106666666667" iyz="0.0" izz="0.00106666666667"/>
    </inertial>
  </link>
  <gazebo reference="movable_mass_3">
    <material>Gazebo/Blue</material>
  </gazebo>
  <transmission name="transmission_0">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="stick_to_movable_mass_0">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_0">
      <hardwareInterface>EffortActuatorInterface</hardwareInterface>
      <mechanicalReduction>100</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="transmission_1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="stick_to_movable_mass_1">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_1">
      <hardwareInterface>EffortActuatorInterface</hardwareInterface>
      <mechanicalReduction>100</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="transmission_2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="stick_to_movable_mass_2">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_2">
      <hardwareInterface>EffortActuatorInterface</hardwareInterface>
      <mechanicalReduction>100</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="transmission_3">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="stick_to_movable_mass_3">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_3">
      <hardwareInterface>EffortActuatorInterface</hardwareInterface>
      <mechanicalReduction>100</mechanicalReduction>
    </actuator>
  </transmission>
  <joint name="land_gear_1" type="fixed">
    <origin rpy="0 0 0" xyz="0 -0.325 -0.6"/>
    <axis xyz="0 0 1"/>
    <parent link="base_link"/>
    <child link="land_gear_1"/>
  </joint>
  <link name="land_gear_1">
    <!--visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="0.01 0.01 0.0001"/>
        </geometry>
      </visual-->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.8 0.1 0.05"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1e-06"/>
      <inertia ixx="1e-6" ixy="0.0" ixz="0.0" iyy="1e-6" iyz="0.0" izz="1e-6"/>
    </inertial>
  </link>
  <joint name="land_gear_2" type="fixed">
    <origin rpy="0 0 0" xyz="0 0.325 -0.6"/>
    <axis xyz="0 0 1"/>
    <parent link="base_link"/>
    <child link="land_gear_2"/>
  </joint>
  <link name="land_gear_2">
    <!--visual>
        <origin rpy="0 0 0" xyz="0 0 0"/>
        <geometry>
          <box size="0.01 0.01 0.0001"/>
        </geometry>
      </visual-->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.8 0.1 0.05"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1e-06"/>
      <inertia ixx="1e-6" ixy="0.0" ixz="0.0" iyy="1e-6" iyz="0.0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- Mount an IMU-->
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_ros">
      <robotNamespace>morus</robotNamespace>
      <bodyName>base_link</bodyName>
      <!-- (string, required): name of the body which holds the IMU sensor -->
      <topicName>imu</topicName>
      <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <accelOffset>0.0 0.0 0.0</accelOffset>
      <!-- (Vector3): constant acceleration offset -->
      <accelDrift>0.0 0.0 0.0</accelDrift>
      <!-- (Vector3): standard deviation of the acceleration drift error -->
      <accelDriftFrequency>0.0 0.0 0.0</accelDriftFrequency>
      <!-- (Vector3): mean frequency of the acceleration drift staviti na nulu-->
      <accelGaussianNoise>0.0 0.0 0.0</accelGaussianNoise>
      <!-- (Vector3): standard deviation of the additive Gaussian acceleration noise -->
      <rateOffset>0.0 0.0 0.0</rateOffset>
      <!-- (Vector3): constant rate offset -->
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <!-- (Vector3): standard deviation of the rate drift error -->
      <rateDriftFrequency>0.0 0.0 0.0</rateDriftFrequency>
      <!-- (Vector3): mean frequency of the rate drift  staviti na nulu-->
      <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
      <!-- (Vector3): standard deviation of the additive Gaussian rate noise -->
      <headingOffset>0.0</headingOffset>
      <!-- (double): constant heading offset -->
      <headingDrift>0.0</headingDrift>
      <!-- (double): standard deviation of the heading drift error -->
      <headingDriftFrequency>0.0</headingDriftFrequency>
      <!-- (double): mean frequency of the heading drift  staviti na nulu-->
      <headingGaussianNoise>0.0</headingGaussianNoise>
      <!-- (double): standard deviation of the heading additive Gaussian noise -->
      <rpyOffsets>0.0 0.0 0.0</rpyOffsets>
      <!-- (Vector3): if non-zero, used to calculate accelOffset and headingOffset so that resulting roll, pitch and yaw errors correspond to this values when the platform is leveled (for compatibility with gazebo_plugins) -->
    </plugin>
  </gazebo>
  <!-- Start publishing battery status msgs-->
  <gazebo>
    <plugin filename="libmorus_gazebo_battery_status.so" name="battery_status_11">
      <batteryID> 11 </batteryID>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libmorus_gazebo_battery_status.so" name="battery_status_12">
      <batteryID> 12 </batteryID>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libmorus_gazebo_battery_status.so" name="battery_status_13">
      <batteryID> 13 </batteryID>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libmorus_gazebo_battery_status.so" name="battery_status_14">
      <batteryID> 14 </batteryID>
    </plugin>
  </gazebo>
  <!-- Start publishing GM status msgs-->
  <gazebo>
    <plugin filename="libmorus_gazebo_gm_status.so" name="gm_status_1">
      <gmID> 1 </gmID>
      <linkName>rotor_0</linkName>
      <jointName>rotor_0_joint</jointName>
      <motorConstant>0.000456874</motorConstant>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libmorus_gazebo_gm_status.so" name="gm_status_22">
      <gmID> 2 </gmID>
      <linkName>rotor_1</linkName>
      <jointName>rotor_1_joint</jointName>
      <motorConstant>0.000456874</motorConstant>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libmorus_gazebo_gm_status.so" name="gm_status_13">
      <gmID> 3 </gmID>
      <linkName>rotor_2</linkName>
      <jointName>rotor_2_joint</jointName>
      <motorConstant>0.000456874</motorConstant>
    </plugin>
  </gazebo>
  <gazebo>
    <plugin filename="libmorus_gazebo_gm_status.so" name="gm_status_14">
      <gmID> 4 </gmID>
      <linkName>rotor_3</linkName>
      <jointName>rotor_3_joint</jointName>
      <motorConstant>0.000456874</motorConstant>
    </plugin>
  </gazebo>
  <!-- odometry link -->
  <link name="morus/odometry_sensor1_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.01"/>
      <!-- [kg] -->
    </inertial>
  </link>
  <!-- odometry joint -->
  <joint name="morus/odometry_sensor1_joint" type="revolute">
    <parent link="base_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="-0.0 0.0 0"/>
    <child link="morus/odometry_sensor1_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
  </joint>
  <gazebo>
    <plugin filename="librotors_gazebo_odometry_plugin.so" name="odometry_sensor1">
      <linkName>morus/odometry_sensor1_link</linkName>
      <robotNamespace>morus</robotNamespace>
      <poseTopic>pose</poseTopic>
      <poseWithCovarianceTopic>pose_with_covariance</poseWithCovarianceTopic>
      <positionTopic>position</positionTopic>
      <transformTopic>transform</transformTopic>
      <odometryTopic>odometry</odometryTopic>
      <parentFrameId>world</parentFrameId>
      <!-- Use the scoped link name here. e.g. Model::link. -->
      <childFrameId>base</childFrameId>
      <measurementDivisor>10</measurementDivisor>
      <!-- only every (seq % measurementDivisor) == 0 measurement is published [int] -->
      <measurementDelay>10</measurementDelay>
      <!-- time that measurement gets held back before it's published in [simulation cycles (int)] -->
      <unknownDelay>0.0</unknownDelay>
      <!-- additional delay, that just gets added to the timestamp [s] -->
      <noiseNormalPosition>0.0 0.0 0.0</noiseNormalPosition>
      <!-- standard deviation of additive white gaussian noise [m] -->
      <noiseNormalQuaternion>0.0 0.0 0.0</noiseNormalQuaternion>
      <!-- standard deviation white gaussian noise [rad]: q_m = q*quaternionFromSmallAngleApproximation(noiseNormalQ) -->
      <noiseNormalLinearVelocity>0 0 0</noiseNormalLinearVelocity>
      <!-- standard deviation of additive white gaussian noise [m/s] -->
      <noiseNormalAngularVelocity>0 0 0</noiseNormalAngularVelocity>
      <!-- standard deviation of additive white gaussian noise [rad/s] -->
      <noiseUniformPosition>0 0 0</noiseUniformPosition>
      <!-- symmetric bounds of uniform noise [m] -->
      <noiseUniformQuaternion>0 0 0</noiseUniformQuaternion>
      <!-- symmetric bounds of uniform noise [rad], computation see above -->
      <noiseUniformLinearVelocity>0 0 0</noiseUniformLinearVelocity>
      <!-- symmetric bounds of uniform noise [m/s] -->
      <noiseUniformAngularVelocity>0 0 0</noiseUniformAngularVelocity>
    </plugin>
  </gazebo>
</robot>

